{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","products","setProducts","productName","setProductName","productId","setProductId","productCode","setProductCode","productPrice","setProductPrice","productStock","setProductStock","mode","setMode","useEffect","fetch","method","then","res","json","data","window","location","pathname","className","Nav","activeKey","style","backgroundColor","Item","Link","href","color","eventKey","Form","onSubmit","e","preventDefault","headers","body","JSON","stringify","code","name","price","stock","reload","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Table","striped","bordered","hover","map","el","i","width","onClick","_id","loadValues","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.504298c7.chunk.js","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react'\nimport Nav from 'react-bootstrap/Nav';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [products, setProducts] = useState([])\n  const [productName, setProductName] = useState('')\n  const [productId, setProductId] = useState('')\n  const [productCode, setProductCode] = useState('')\n  const [productPrice, setProductPrice] = useState(0)\n  const [productStock, setProductStock] = useState(0)\n  const [mode, setMode] = useState('add')\n  useEffect(() => {\n    fetch('https://utec-api.herokuapp.com/api/v1/products', {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setProducts(res.data))\n  }, [])\n\n  const addProduct = e => {\n    e.preventDefault()\n    fetch(`https://utec-api.herokuapp.com/api/v1/products`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code: productCode,\n        name: productName,\n        price: productPrice,\n        stock: productStock\n      })\n    })\n      .then((res) => res.json())\n      .then((res) => window.location.reload())\n  }\n\n  const deleteRecord = id => {\n    fetch(`https://utec-api.herokuapp.com/api/v1/products/${id}`, {\n      method: 'DELETE',\n    })\n      .then((res) => res.json())\n      .then((res) => window.location.reload())\n  }\n\n  const updateRecord = (e) => {\n    e.preventDefault()\n    fetch(`https://utec-api.herokuapp.com/api/v1/products/${productId}`, {\n      method: 'PATCH',\n      mode: 'cors',\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code: productCode,\n        name: productName,\n        price: productPrice,\n        stock: productStock\n      })\n    })\n      .then((res) => res.json())\n      .then((res) => window.location.reload())\n  }\n\n  const loadValues = el => {\n    setMode('update')\n    setProductId(el._id)\n    setProductCode(el.code)\n    setProductName(el.name)\n    setProductPrice(el.price)\n    setProductStock(el.stock)\n  }\n\n  if(window.location.pathname === '/home' || window.location.pathname === '/'){\n    return (\n      <div className=\"App\">\n      <header className=\"\">\n        <Nav activeKey=\"/home\" style={{ backgroundColor: 'black' }}>\n          <Nav.Item>\n            <Nav.Link href=\"/home\" style={{ color: 'white' }}>Home</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-1\" href=\"/product\" style={{ color: 'white' }}>Productos</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <br />\n        <h1>Informacion</h1>\n      </header>\n      <br />\n      <section>\n        <h2>Joshua Herrera</h2>\n        <h2>25-0061-2015</h2>\n      </section>\n    </div>\n    );\n  } else {\n  return (\n    <div className=\"App\">\n      <header className=\"\">\n        <Nav activeKey=\"/home\" style={{ backgroundColor: 'black' }}>\n          <Nav.Item>\n            <Nav.Link href=\"/home\" style={{ color: 'white' }}>Home</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-1\" href=\"/product\" style={{ color: 'white' }}>Productos</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <br />\n        <h1>Productos</h1>\n      </header>\n      <br />\n      <section>\n        <Form onSubmit={mode === 'add' ? addProduct : updateRecord}>\n          <Form.Group className=\"mb-3\" controlId=\"productCode\">\n            <Form.Label>Codigo</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"CA-0000\" value={productCode} onChange={(e) => setProductCode(e.target.value)} />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"productName\">\n            <Form.Label>Nombre del producto</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Nombre del producto\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"productPrice\">\n            <Form.Label>Precio del producto</Form.Label>\n            <Form.Control type=\"number\" placeholder=\"Precio del producto\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"productStock\">\n            <Form.Label>Existencias del producto</Form.Label>\n            <Form.Control type=\"number\" placeholder=\"Existencias del producto\" value={productStock} onChange={(e) => setProductStock(e.target.value)} />\n          </Form.Group>\n          <button className={mode === 'add' ? \"btn btn-success\" : \"btn btn-warning\"} type=\"submit\">\n            {mode === 'add' ? 'Agregar' : 'Modificar'}\n          </button>\n        </Form>\n      </section>\n      <br />\n      <section>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Codigo</th>\n              <th>Nombre de producto</th>\n              <th>Precio</th>\n              <th>Disponibilidad</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((el, i) => {\n              return (\n                <tr key={i + el._id}>\n                  <td>{el.code}</td>\n                  <td>{el.name}</td>\n                  <td>${el.price}</td>\n                  <td>{el.stock}</td>\n                  <td style={{ width: '5vw' }}><button className='btn btn-info' onClick={(e) => loadValues(el)}>Modificar</button></td>\n                  <td style={{ width: '5vw' }}><button className='btn btn-danger' onClick={(e) => deleteRecord(el._id)}>Borrar</button></td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </Table>\n      </section>\n    </div>\n  );}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}